image: docker:git

services:
    - docker:dind

variables:
    GIT_BRANCH: $CI_COMMIT_REF_NAME
    GIT_REPO_NAME: api.nilportugues.com/internal/text-translate/translate-api
    DOCKER_IMAGE: registry.gitlab.com/api.nilportugues.com/internal/text-translate/translate-api
    PYTHON_IMAGE: registry.gitlab.com/registry.docker.nilportugues.com/python3-ubuntu:1.0.0
    SSH_DOCKER_IMAGE: registry.gitlab.com/ci.docker.nilportugues.com/ssh-credentials:1.0.0
    SERVER_NAME: "195.201.23.98"
stages:
    - build
    - release
    - deploy

## ----------------------------------------------------------------------------------------
## BUILD
## ----------------------------------------------------------------------------------------
  
preprod_build:
    stage: build
    environment: preproduction
    before_script:
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com    
    script:
        - echo "Rename .py.prod files to .py"
        - mv ./src/translate_api/application.py.prod ./src/translate_api/application.py
        - mv ./src/translate_api/settings.py.prod ./src/translate_api/settings.py
        - echo "Run the build script"
        - docker run -v "$(pwd)/:/app/" -i ${PYTHON_IMAGE} /bin/bash /app/build.sh
        - echo "Build the docker image..."
        - docker build -t registry.gitlab.com/${GIT_REPO_NAME} .
        - docker tag registry.gitlab.com/${GIT_REPO_NAME}:latest registry.gitlab.com/${GIT_REPO_NAME}:latest
        - docker push registry.gitlab.com/${GIT_REPO_NAME}:latest
    only:
    - master

  
production_build:
    stage: build
    environment: production
    before_script:
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com    
    script:
        - echo "Rename .py.prod files to .py"
        - mv ./src/translate_api/application.py.prod ./src/translate_api/application.py
        - mv ./src/translate_api/settings.py.prod ./src/translate_api/settings.py
        - echo "Run the build script"
        - docker run -v "$(pwd)/:/app/" -i ${PYTHON_IMAGE} /bin/bash /app/build.sh
        - echo "Build the docker image..."
        - docker build -t registry.gitlab.com/${GIT_REPO_NAME} .
        - docker tag registry.gitlab.com/${GIT_REPO_NAME}:latest registry.gitlab.com/${GIT_REPO_NAME}:${GIT_BRANCH}
        - docker push registry.gitlab.com/${GIT_REPO_NAME}:${GIT_BRANCH}
    only:
       - /^(([0-9]+(\.[0-9])?(\.[0-9])?))$/  # Targets semver: X.Y.Z

deploy_to_prod:
  stage: deploy
  environment: production
  image: ${SSH_DOCKER_IMAGE}
  script: 
    - echo 'Preparing docker-compose.yml ...'
    - DOCKER_IMAGE_ESCAPED=${DOCKER_IMAGE//\//\\/}
    - sed -e "s/\${DOCKER_IMAGE}/${DOCKER_IMAGE_ESCAPED}/g" -e "s/\${GIT_BRANCH}/${GIT_BRANCH}/g" docker-compose.yml.tpl > translate.api.nilportugues.com.yml
    - echo 'Copying docker-compose.yml ...'
    - scp ./translate.api.nilportugues.com.yml root@${SERVER_NAME}:/tmp/
    - echo 'Running docker swarm ...'
    - ssh -q root@${SERVER_NAME} "docker pull ${DOCKER_IMAGE}:${GIT_BRANCH} && docker stack deploy -c /tmp/translate.api.nilportugues.com.yml up"
    - echo 'Removing docker-compose.yml ...'
    - ssh -q root@${SERVER_NAME} "rm /tmp/translate.api.nilportugues.com.yml"
    - echo 'Release OK!'
  only:
    - /^(([0-9]+(\.[0-9])?(\.[0-9])?))$/  # Targets semver: X.Y.Z


